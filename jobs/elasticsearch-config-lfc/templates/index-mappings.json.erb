{
  "template" : "<%= p('elasticsearch_config.index_prefix') %>*",
  "order": 202,
  "settings": { 
    "index": {
      "query": {
        "default_field": "_all"
      }      
    }    
  },
  "mappings" : {
    "_default_" : {
      "_all": {
        "enabled": true
      },
      "dynamic_templates": [
        {
          "string_not_analyzed__id_fields": {
            "match_pattern": "regex",
            "match": "^(\\S+_id)$",
            "match_mapping_type": "string",
            "mapping": {
              "type" : "string", "index" : "not_analyzed", "omit_norms" : true
            }
          }
        },
        {
          "raw_for_string_significant__simple_fields": {
            "match_pattern": "regex",
            "match": "^(@level|@type|@input|@index_type)$",
            "match_mapping_type": "string",
            "mapping": {
              "type": "multi_field",
              "fields": {
                "{name}": {
                  "type": "string",
                  "index": "analyzed",
                  "omit_norms": true
                },
                "raw": {
                  "type": "string",
                  "index": "not_analyzed",
                  "ignore_above": 256
                }
              }
            }
          }
        },
        {
          "raw_for_string_significant__path_fields": {
            "match_pattern": "regex",
            "path_match": "^(@shipper.name|@source.*|@cf.*|app.*)$",
            "match_mapping_type": "string",
            "mapping": {
              "type": "multi_field",
              "fields": {
                "{name}": {
                  "type": "string",
                  "index": "analyzed",
                  "omit_norms": true
                },
                "raw": {
                  "type": "string",
                  "index": "not_analyzed",
                  "ignore_above": 256
                }
              }
            }
          }
        },
        {
          "raw_for_string__path_fields": {
            "path_match": "haproxy.http_request_verb",
            "match_mapping_type": "string",
            "mapping": {
              "type": "multi_field",
              "fields": {
                "{name}": {
                  "type": "string",
                  "index": "analyzed",
                  "omit_norms": true
                },
                "raw": {
                  "type": "string",
                  "index": "not_analyzed",
                  "ignore_above": 256
                }
              }
            }
          }
        }
      ],
      "properties" : {
         "geoip"  : {
           "type" : "object",
             "dynamic": true,
             "properties" : {
               "location" : { "type" : "geo_point" }
             }
         }
      }
    }
  }
}
